name: release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: olafurpg/setup-scala@v5
        with:
          java-version: adopt@1.11

      - uses: actions/setup-node@v1
        with:
          node-version: "13.x"
          registry-url: "https://registry.npmjs.org"

      - run: npm install -g junit-merge
      - run: npm install -g junit-viewer

      - name: Build
        run: |
          sbt test:compile multi-jvm:compile
          sbt makeSite

      - name: Tests
        run: sbt -DenableCoverage=true -DgenerateStoryReport=true test:test

      - name: Coverage Report
        run: |
          sbt -DenableCoverage=true coverageReport
          sbt coverageAggregate
      
      - name: RTM
        run: |
          ./scripts/coursier launch -r jitpack -r https://jcenter.bintray.com com.github.tmtsoftware:rtm_2.13:47b635b289 -M tmt.test.reporter.TestRequirementMapper -- target/RTM/testStoryMapping.txt tools/RTM/storyRequirementMapping.csv target/RTM/testRequirementsMapping.txt

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v1
        with:
          name: Coverage Report
          path: target/scala-2.13/scoverage-report
      
      - name: Upload RTM
        uses: actions/upload-artifact@v1
        with:
          name: RTM
          path: target/RTM

      - name: Delete js targets
        continue-on-error: true
        run: find . -type d -regex ".*js/target.*" | xargs rm -rf

      - name: Multi-Jvm Tests
        run: sbt esw-integration-test/multi-jvm:test

      - name: Github Release
        run: sbt -Dprod.publish=true githubRelease
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Docs Publish
        run: |
          echo 'echo $RELEASE_TOKEN' > /tmp/.git-askpass
          chmod +x /tmp/.git-askpass
          git config --global user.email "actions@github.com"
          git config --global user.name "Github Action"
          sbt -Dprod.publish=true clean ghpagesPushSite
        env:
          RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          GIT_ASKPASS: /tmp/.git-askpass

      - name: Build Status
        if: always()
        id: status
        run: |
          if [[ ${{job.status}} == Success ]]
          then
          echo ::set-output name=title::'SUCCESS'
          echo ::set-output name=color::'#00FF00'
          else
          echo ::set-output name=title::'FAILURE'
          echo ::set-output name=color::'#FF0000'
          fi

      - name: Notify slack
        if: always()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"#esw-prod-release\", \"attachments\": [ { \"title\":\"${{ steps.status.outputs.title }}\", \"text\": \"[ ${{ github.event.repository.name }} ] : [ ${{ github.workflow }} ] : [ ${{ github.ref }} ] \n https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\", \"color\": \"${{ steps.status.outputs.color }}\" } ]}'
